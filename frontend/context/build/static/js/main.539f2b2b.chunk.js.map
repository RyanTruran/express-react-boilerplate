{"version":3,"sources":["Components/Header/header.jsx","App.js","reportWebVitals.js","index.js"],"names":["pjson","require","Header","Navbar","bg","variant","expand","Brand","className","name","Toggle","aria-controls","Collapse","Nav","to","App","useState","example","setExample","useEffect","axios","get","then","res","console","log","data","catch","err","error","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qkCAIMA,EAAQC,EAAQ,IAEf,SAASC,IACZ,OACI,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAQ,KAAzC,UACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,UAAW,OAAzB,SACKR,EAAMS,OAEX,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAe,qBAC9B,cAACR,EAAA,EAAOS,SAAR,UACI,eAACC,EAAA,EAAD,CAAKL,UAAW,UAAhB,UACI,cAAC,IAAD,CAASM,GAAG,aAAaN,UAAW,eAApC,uBAGA,cAAC,IAAD,CAASM,GAAG,SAASN,UAAW,eAAhC,2B,qBCQLO,MAtBf,WAEI,MAA6BC,mBAAS,MAAtC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,qBAAU,WACNC,IAAMC,IAAI,SAASC,MAAK,SAACC,GACrBC,QAAQC,IAAIF,EAAIG,MAChBR,EAAWK,EAAIG,SAChBC,OAAM,SAAAC,GAAG,OAAIJ,QAAQK,MAAMD,QAChC,IAEE,eAAC,IAAME,SAAP,WACI,qBAAKtB,UAAW,gBAAhB,SACI,cAACN,EAAD,MAEJ,qBAAKM,UAAW,MAAhB,SACKS,QCRFc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACH,cAAC,IAAD,UACI,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,QAGZC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.539f2b2b.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {Navbar, Nav} from \"react-bootstrap\";\nimport \"./header.css\"\nconst pjson = require('../../../package.json')\n\nexport function Header() {\n    return(\n        <Navbar bg=\"dark\" variant=\"dark\" expand={'lg'}>\n            <Navbar.Brand className={'mx-2'}>\n                {pjson.name}\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls={'basic-navbar-nav'}/>\n            <Navbar.Collapse>\n                <Nav className={'mr-auto'}>\n                    <NavLink to='/dashboard' className={'mx-3 NavLink'}>\n                        Dashboard\n                    </NavLink>\n                    <NavLink to='/about' className={'mx-3 NavLink' }>\n                        About\n                    </NavLink>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport {Header} from \"./Components/Header/header\";\nimport axios from \"axios\"\nfunction App() {\n\n    const [example,setExample] = useState(null);\n\n    useEffect(()=> {\n        axios.get('/api/').then((res) => {\n            console.log(res.data)\n            setExample(res.data)\n        }).catch(err => console.error(err))\n    },[])\n    return (\n        <React.Fragment>\n            <div className={'sticky-lg-top'}>\n                <Header/>\n            </div>\n            <div className={'App'}>\n                {example}\n            </div>\n        </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {\n    BrowserRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n      <Router>\n          <React.StrictMode>\n              <App />\n          </React.StrictMode>\n      </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}